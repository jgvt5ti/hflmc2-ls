(define-fun-rec length ((ls (List Int))) Int
   (ite (= nil ls) 0 (+ 1 (length (tail ls)))))
(declare-fun X1 (Int (List Int)) Bool)
(declare-fun X2 (Int (List Int)) Bool)
(declare-fun X3 (Int (List Int)) Bool)
(declare-fun X6 (Int Int (List Int)) Bool)
(declare-fun X7 (Int Int (List Int) (List Int)) Bool)
(declare-fun X34 (Int ) Bool)
(declare-fun X37 ( ) Bool)
(declare-fun X38 ( (List Int)) Bool)
(declare-fun X45 (Int (List Int)) Bool)
(declare-fun X46 (Int Int Int (List Int) (List Int)) Bool)
(declare-fun X47 (Int Int Int (List Int) (List Int)) Bool)
(assert (forall ((x42 Int)(x40 (List Int))) (=> (and (X2  x42  x40) (<=  x42 0)) false)))
(assert (forall ((hd8 Int)(x42 Int)(x40 (List Int))) (=> (X2  x42  x40) (X6  hd8 x42  x40))))
(assert (forall ((u20 Int)(x41 Int)(x40 (List Int))) (=> (and (X2  u20  x40) (X3  x41  x40)) (X1  x41  x40))))
(assert (forall ((hd8 Int)(u7 Int)(ls5 (List Int))(tl9 (List Int))) (=> (X6  hd8 u7  ls5) (X7  hd8 u7  tl9 ls5))))
(assert (forall ((hd8 Int)(tmp43 Int)(u7 Int)(ls5 (List Int))(tl9 (List Int))) (=> (and (=  tmp43 0) (and (X7  hd8 u7  tl9 ls5) (=  ls5 nil))) (X3  tmp43  ls5))))
(assert (forall ((hd8 Int)(tmp44 Int)(u7 Int)(ls5 (List Int))(tl9 (List Int))) (=> (and (=  tmp44 (-  u7 1)) (and (X7  hd8 u7  tl9 ls5) (and (=  hd8 0) (=  ls5 (insert hd8 tl9))))) (X46  tmp44 hd8 u7  tl9 ls5))))
(assert (forall ((hd8 Int)(tmp45 Int)(u7 Int)(ls5 (List Int))(tl9 (List Int))) (=> (and (=  tmp45 (-  u7 1)) (and (X7  hd8 u7  tl9 ls5) (and (=  hd8 1) (=  ls5 (insert hd8 tl9))))) (X47  tmp45 hd8 u7  tl9 ls5))))
(assert (forall ((hd8 Int)(u7 Int)(x39 Int)(ls5 (List Int))(tl9 (List Int))) (=> (X47  x39 hd8 u7  tl9 ls5) (X2  x39  tl9))))
(assert (forall ((hd8 Int)(u7 Int)(u20 Int)(x38 Int)(ls5 (List Int))(tl9 (List Int))) (=> (and (X47  u20 hd8 u7  tl9 ls5) (X1  x38  tl9)) (X34  x38 ))))
(assert (forall ((hd8 Int)(u7 Int)(x37 Int)(ls5 (List Int))(tl9 (List Int))) (=> (X46  x37 hd8 u7  tl9 ls5) (X2  x37  tl9))))
(assert (forall ((hd8 Int)(u7 Int)(u20 Int)(x36 Int)(ls5 (List Int))(tl9 (List Int))) (=> (and (X46  u20 hd8 u7  tl9 ls5) (X1  x36  tl9)) (X34  x36 ))))
(assert (forall ((ls3 (List Int))) (=> X37 (X38   ls3))))
(assert (forall ((tmp46 Int)(ls3 (List Int))) (=> (and (=  tmp46 (+ 1 (length ls3))) (X38   ls3)) (X45  tmp46  ls3))))
(assert (forall ((x34 Int)(ls3 (List Int))) (=> (X45  x34  ls3) (X2  x34  ls3))))
(assert (forall ((u20 Int)(x33 Int)(ls3 (List Int))) (=> (and (X45  u20  ls3) (X1  x33  ls3)) (X34  x33 ))))
(assert (forall () (=> true X37)))
(check-sat)
(get-model)
    